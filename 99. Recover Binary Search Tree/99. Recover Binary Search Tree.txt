第1次提交：首先明确，如果想要找到错位的节点，那么使用中序遍历的方法可以快速找到两个错位的节点。
例如对于序列1234567，若其中的两个节点位置发生了互换，则可能出现以下两种情况：
（1）相邻两节点错位，例如123[54]67，此时序列中的相邻逆序对只有[54]一对，因此只需要交换逆序对的两个元素即可。
（2）不相邻两节点错位，例如12[6]45[3]7，此时序列中的相邻逆序对有[64]和[53]两对，发生错位的两个元素分别是第一逆序对的第一个元素6和第二逆序对的第二个元素3。
因此问题化为，只要得到了中序遍历的相邻逆序对，即可对错位节点进行修复。此处每次只需要对相邻两节点进行判断，不需要存储所有遍历节点，进行判断的过程仅需要O(1)的空间。
但是这里仍存存在一个问题：常见的树遍历算法都不能在O(1)的空间下完成，因此morris树遍历算法就很好的解决了这个问题。